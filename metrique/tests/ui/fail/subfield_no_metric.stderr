error[E0277]: CloseValueRef is not implemented for ChildMetrics
 --> tests/ui/fail/subfield_no_metric.rs:8:5
  |
8 |     child: ChildMetrics,
  |     ^^^^^ the trait `CloseValue` is not implemented for `ChildMetrics`
  |
  = note: You may need to add `#[metrics]` to `ChildMetrics` or implement `CloseValueRef` directly.
  = help: the following other types implement trait `CloseValue`:
            Cow<'static, str>
            LazySlot<T>
            RootMetrics
            String
            TimestampOnClose

error[E0277]: CloseValue is not implemented for ChildMetrics
 --> tests/ui/fail/subfield_no_metric.rs:7:8
  |
7 | struct RootMetrics {
  |        ^^^^^^^^^^^ within `RootMetricsEntry`, the trait `CloseValue` is not implemented for `ChildMetrics`
  |
  = note: You may need to add `#[metrics]` to `ChildMetrics` or implement `CloseValue` directly.
  = help: the following other types implement trait `CloseValue`:
            Cow<'static, str>
            LazySlot<T>
            RootMetrics
            String
            TimestampOnClose
note: required because it appears within the type `RootMetricsEntry`
 --> tests/ui/fail/subfield_no_metric.rs:7:8
  |
7 | struct RootMetrics {
  |        ^^^^^^^^^^^
note: required by a bound in `metrique::CloseValue::Closed`
 --> $WORKSPACE/metrique-core/src/lib.rs
  |
  |     type Closed;
  |     ^^^^^^^^^^^^ required by this bound in `CloseValue::Closed`

error[E0277]: CloseValue is not implemented for ChildMetrics
 --> tests/ui/fail/subfield_no_metric.rs:6:1
  |
6 | #[metrics(rename_all = "snake_case")]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `RootMetricsEntry`, the trait `CloseValue` is not implemented for `ChildMetrics`
  |
  = note: You may need to add `#[metrics]` to `ChildMetrics` or implement `CloseValue` directly.
  = help: the following other types implement trait `CloseValue`:
            Cow<'static, str>
            LazySlot<T>
            RootMetrics
            String
            TimestampOnClose
note: required because it appears within the type `RootMetricsEntry`
 --> tests/ui/fail/subfield_no_metric.rs:7:8
  |
7 | struct RootMetrics {
  |        ^^^^^^^^^^^
  = note: the return type of a function must have a statically known size
  = note: this error originates in the attribute macro `metrics` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: CloseValue is not implemented for ChildMetrics
 --> tests/ui/fail/subfield_no_metric.rs:6:1
  |
6 | #[metrics(rename_all = "snake_case")]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `RootMetricsEntry`, the trait `CloseValue` is not implemented for `ChildMetrics`
  |
  = note: You may need to add `#[metrics]` to `ChildMetrics` or implement `CloseValue` directly.
  = help: the following other types implement trait `CloseValue`:
            Cow<'static, str>
            LazySlot<T>
            RootMetrics
            String
            TimestampOnClose
note: required because it appears within the type `RootMetricsEntry`
 --> tests/ui/fail/subfield_no_metric.rs:7:8
  |
7 | struct RootMetrics {
  |        ^^^^^^^^^^^
  = note: required for `RootEntry<RootMetricsEntry>` to implement `metrique::__writer::Entry`
note: required by a bound in `EntrySink`
 --> $WORKSPACE/metrique-writer-core/src/sink.rs
  |
  | pub trait EntrySink<E: Entry> {
  |                        ^^^^^ required by this bound in `EntrySink`
  = note: this error originates in the attribute macro `metrics` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: CloseValueRef is not implemented for ChildMetrics
 --> tests/ui/fail/subfield_no_metric.rs:6:1
  |
6 | #[metrics(rename_all = "snake_case")]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `CloseValue` is not implemented for `ChildMetrics`
  |
  = note: You may need to add `#[metrics]` to `ChildMetrics` or implement `CloseValueRef` directly.
  = help: the following other types implement trait `CloseValue`:
            Cow<'static, str>
            LazySlot<T>
            RootMetrics
            String
            TimestampOnClose
  = note: this error originates in the attribute macro `metrics` (in Nightly builds, run with -Z macro-backtrace for more info)
