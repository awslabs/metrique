[package]
name = "metrique-writer"
version = "0.1.4"
edition = "2024"
rust-version = "1.87"                                                                 # MSRV is 1.87 due to `extend_from_within` [and 1.86 due to trait upcasts]
license = "Apache-2.0"
description = "Library for working with unit of work metrics - writer-side interface"
repository = "https://github.com/awslabs/metrique"
readme = "README.md"

[dependencies]
ahash = { workspace = true }
derive-where = { workspace = true }
smallvec = { workspace = true, features = [
    "union",
    "const_generics",
    "const_new",
] }
tracing-subscriber = { workspace = true, optional = true }
tracing-appender = { workspace = true, optional = true }
rand = { workspace = true }
crossbeam-queue = { workspace = true, optional = true }
crossbeam-utils = { workspace = true, optional = true }
tokio = { workspace = true, optional = true, default-features = false, features = [
    "sync",
] }
tokio-util = { workspace = true, optional = true, features = ["rt"] }
tracing = { workspace = true, optional = true }
metrics_024 = { workspace = true, optional = true }
metrics-util_020 = { workspace = true, optional = true }
futures = { workspace = true, default-features = false, optional = true }
pin-project = { workspace = true, optional = true }
histogram = { workspace = true, optional = true }
metrique-writer-core = { path = "../metrique-writer-core", version = "0.1.4" }
metrique-writer-macro = { path = "../metrique-writer-macro", version = "0.1.1" }

[dev-dependencies]
enum-map = { workspace = true }
strum_macros = { workspace = true }
metrique-writer-core = { path = "../metrique-writer-core", features = [
    "private-test-util",
    "test-util",
] }
metrique-writer = { path = "../metrique-writer", features = ["test-util"] }
metrique-writer-format-emf = { path = "../metrique-writer-format-emf" }
metrics-util_020 = { workspace = true, features = ["debugging"] }
futures = { workspace = true, features = ["executor"] }
tokio = { workspace = true, features = ["macros", "test-util"] }
tracing-appender = { workspace = true }
tempfile = { workspace = true }
assert_approx_eq = { workspace = true }
test-case = { workspace = true }
assert-json-diff = { workspace = true }
serde_json = { workspace = true }

[features]
default = [
    "background_queue",
    "tracing_subscriber_03",
    "metrics_rs_024",
    "metrics_rs_bridge",
]
test-util = ["metrique-writer-core/test-util"]
# Private utilities for testing the formatter crates. 100% unstable, do not use outside of this workspace
# dep:tracing-appender is for rustdoc
private-test-util = ["dep:tracing-appender"]
metrics_rs_bridge = [
    "dep:pin-project",
    "dep:futures",
    "dep:histogram",
    "dep:tokio-util",
    "dep:tracing",
    "background_queue",
    "tokio/time",
    "futures/executor",
]
metrics_rs_024 = ["dep:metrics_024", "dep:metrics-util_020"]
background_queue = [
    "dep:tokio",
    "dep:crossbeam-queue",
    "dep:crossbeam-utils",
    "dep:tracing",
]
tracing_subscriber_03 = ["dep:tracing-subscriber"]

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu"]
rustdoc-args = ["--cfg", "docsrs"]
